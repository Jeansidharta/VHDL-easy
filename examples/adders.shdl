fullAdder(A, B, carry_in; answer, carry_out){
   answer = A xor B xor carry_in;
   carry_out = (A and B) or (A and carry_in) or (B and carry_in);
}

Adder_8bits(a[8], b[8]; answer[8], overflow){
   import fullAdder;
   signal carries[7];

   fullAdder(A[0], B[0],     0     ; answer[0], carries[0]);
   fullAdder(A[1], B[1], carries[0]; answer[1], carries[1]);
   fullAdder(A[2], B[2], carries[1]; answer[2], carries[2]);
   fullAdder(A[3], B[3], carries[2]; answer[3], carries[3]);
   fullAdder(A[4], B[4], carries[3]; answer[4], carries[4]);
   fullAdder(A[5], B[5], carries[4]; answer[5], carries[5]);
   fullAdder(A[6], B[6], carries[5]; answer[6], carries[6]);
   fullAdder(A[7], B[7], carries[6]; answer[7], overflow);
}
